{
    "version": "0.2.0",
    "configurations": [
        

        {
            "args": [
                "--extensionDevelopmentPath=${workspaceFolder}"
            ],
            "name": "Launch Extension",
            "outFiles": [
                "${workspaceFolder}/out/**/*.js"
            ],
            "preLaunchTask": "npm",
            "request": "launch",
            "type": "extensionHost"
        },
        {
            "name": "Launch Program",
            "program": "${workspaceFolder}/app.js",
            "request": "launch",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "command": "npm start",
            "name": "Run npm start",
            "request": "launch",
            "type": "node-terminal"
        },
        {
            "name": "Attach",
            "port": 9229,
            "request": "attach",
            "skipFiles": [
                "<Data**"
            ],
            "type": "node"
        },
        {
            "args": [
                "--Invert=${aroundBinaryOperator}"
            ],
            "name": "Launch Extension",
            "outFiles": [
                "${}/out/**/*.js"
            ],
            "preLaunchTask": "npm",
            "request": "launch",
            "type": "extensionHost"
        },
        {
            "name": "ROS: Launch",
            "type": "ros",
            "request": "launch",
            "target": "absolute path to launch file"
        },
        {
            "type": "java",
            "name": "Launch Current File",
            "request": "launch",
            "mainClass": "${file}"
        },
        {
            "name": "(gdb) Pipe Attach",
            "type": "cppdbg",
            "request": "attach",
            "program": "enter program name, for example ${workspaceFolder}/a.out",
            "processId": "${command:pickRemoteProcess}",
            "pipeTransport": {
                "debuggerPath": "/usr/bin/gdb",
                "pipeProgram": "/usr/bin/ssh",
                "pipeArgs": [],
                "pipeCwd": ""
            },
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        }
        ,{
            "name": "(spi) ",
            "type": "node",
            "request": "launch",
           "program":  "invert", "cascadeTerminateToConfigurations":[]
, "osx":{}, "showAsyncStacks": true },{
                "type": "java",
                "name": "Launch Current File",
                "request": "launch",
                "mainClass": "${file}"
            }, {
                "name": "Invert Program",
                "program": "${workspaceFolder}/app.js",
                "request": "launch",
                "skipFiles": [
                    "<node_internals>/**"
                ],
                "type": "node"
            } , {
                "type": "java",
                "name": "Launch with Arguments Prompt",
                "request": "launch",
                "mainClass": "",
                "args": "${command:SpecifyProgramArgs}"
            }, {
                "args": [
                    "task"
                ],
                "name": "Gulp task",
                "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
                "request": "launch",
                "skipFiles": [
                    "<node_internals>/**"
                ],
                "type": "node"
            },{
                "name": "Electron Main",
                "program": "${workspaceFolder}/main.js",
                "request": "launch",
                "runtimeExecutable": "${workspaceFolder}/node_modules/.bin/electron",
                "skipFiles": [
                    "<node_internals>/**"
                ],
                "type": "node"
            },{
                "type": "java",
                "name": "Launch with Arguments Prompt",
                "request": "launch",
                "mainClass": "",
                "args": "${command:SpecifyProgramArgs}"
            },
            {
                "args": [
                    "--extensionDevelopmentPath=${workspaceFolder}"
                ],
                "name": "Launch Extension",
                "outFiles": [
                    "${workspaceFolder}/out/**/*.js"
                ],
                "preLaunchTask": "npm",
                "request": "launch",
                "type": "extensionHost"
            }, {
                "type": "java",
                "request": "attach",
                "name": "Attach by Process ID",
                "processId": "${command:PickJavaProcess}"
            },{
                "type": "java",
                "name": "Launch with Arguments Prompt",
                "request": "launch",
                "mainClass": "",
                "args": "${command:SpecifyProgramArgs}"
            },
             {
                "address": "TCP/IP address of process to be debugged",
                "localRoot": "${workspaceFolder}",
                "name": "Attach to Remote",
                "port": 9229,
                "remoteRoot": "Absolute path to the remote directory containing the program",
                "request": "attach",
                "skipFiles": [
                    "<node_internals>/**"
                ],
                "type": "node"
            , } ,{
                "name": "ROS: Launch",
                "type": "ros",
                "request": "launch",
                "target": "absolute path to launch file"
            },
    
            {
                "name": "Launch Chrome",
                "request": "launch",
                "type": "chrome",
                "url": "http://localhost:8080",
                "webRoot": "${workspaceFolder}"
            }, 
            
         
        {
            "type": "node-terminal",
            "name": "JavaScript Debug Terminal",
            "request": "launch",
            "cwd": "${workspaceFolder}"
        }
    ]
}